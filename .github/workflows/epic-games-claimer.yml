name: Epic Games Claimer

on:
  schedule:
    - cron: '0 12 * * *' # Запуск каждый день в 12:00 UTC
  workflow_dispatch: # Ручной запуск

jobs:
  claim-epic-games:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Время для CAPTCHA

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: |
          npm install
          npx playwright install firefox --with-deps
          npm install eslint --save-dev

      - name: Run ESLint to fix code
        run: |
          npx eslint epic-games.js src/util.js --fix || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install apprise

      - name: Install Xvfb, x11vnc, and cloudflared
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb x11vnc jq
          # Устанавливаем cloudflared
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O cloudflared
          chmod +x cloudflared

      - name: Start VNC server
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x720x16 &
          sleep 2
          echo "Starting x11vnc with password ${{ secrets.VNC_PASSWORD }}"
          x11vnc -display :99 -forever -shared -passwd ${{ secrets.VNC_PASSWORD }} -rfbport 5901 &
          sleep 2
          ps aux | grep x11vnc || true
          netstat -tuln | grep 5901 || true

      - name: Start cloudflared tunnel
        run: |
          ./cloudflared tunnel --url tcp://localhost:5901 > cloudflared.log 2>&1 &
          sleep 10
          # Извлекаем публичный URL из логов
          TUNNEL_URL=$(grep -oP 'https://[a-z0-9-]+\.trycloudflare\.com' cloudflared.log || echo "")
          if [ -z "$TUNNEL_URL" ]; then
            echo "Failed to get cloudflared URL"
            cat cloudflared.log
            exit 1
          fi
          # Для VNC используем TCP, преобразуем URL в адрес:порт
          TUNNEL_ADDRESS=$(echo "$TUNNEL_URL" | sed 's|https://||; s|\.trycloudflare\.com||')
          echo "VNC URL: $TUNNEL_ADDRESS:5901" >> vnc_info.txt
          echo "VNC Password: ${{ secrets.VNC_PASSWORD }}" >> vnc_info.txt

      - name: Debug vnc_info.txt
        run: |
          echo "Contents of vnc_info.txt:"
          cat vnc_info.txt

      - name: Send Telegram notification
        env:
          APPRISE_URL: ${{ secrets.TELEGRAM_APPRISE_URL }}
        run: |
          apprise -vv -t "Epic Games Claimer: CAPTCHA Needed" -o "$APPRISE_URL" < vnc_info.txt

      - name: Run Epic Games claimer
        env:
          EG_EMAIL: ${{ secrets.EG_EMAIL }}
          EG_PASSWORD: ${{ secrets.EG_PASSWORD }}
          EG_OTPKEY: ${{ secrets.EG_OTPKEY
