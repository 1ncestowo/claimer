name: Free Games Claimer

on:
  schedule:
    - cron: '0 12 * * *' # Запуск каждый день в 12:00 UTC
  workflow_dispatch: # Ручной запуск

jobs:
  claim-games:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Даем время на ручное прохождение CAPTCHA

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          npx playwright install firefox --with-deps

      - name: Install VNC and Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb tigervnc-standalone-server firefox
          sudo apt-get install -y x11vnc

      - name: Set up ngrok
        run: |
          curl -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip > ngrok.zip
          unzip ngrok.zip
          chmod +x ngrok
          ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start VNC server
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1280x720x16 &
          sleep 2
          vncserver :1 -geometry 1280x720 -depth 24 -passwd ${{ secrets.VNC_PASSWORD }}
          x11vnc -display :99 -forever -shared -nopw &

      - name: Start ngrok tunnel
        run: |
          ./ngrok tcp 5901 > /dev/null &
          sleep 5
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "VNC URL: $NGROK_URL" >> vnc_info.txt
          echo "VNC Password: ${{ secrets.VNC_PASSWORD }}" >> vnc_info.txt

      - name: Send Telegram notification
        env:
          APPRISE_URL: ${{ secrets.TELEGRAM_APPRISE_URL }}
        run: |
          npx apprise -vv -t "Free Games Claimer: CAPTCHA Needed" -o "$APPRISE_URL" < vnc_info.txt

      - name: Run Epic Games claimer
        env:
          EG_EMAIL: ${{ secrets.EG_EMAIL }}
          EG_PASSWORD: ${{ secrets.EG_PASSWORD }}
          EG_OTPKEY: ${{ secrets.EG_OTPKEY }}
          NOTIFY: ${{ secrets.TELEGRAM_APPRISE_URL }}
          NOTIFY_TITLE: 'Epic Games Claimer'
        run: node epic-games.js || true # Игнорируем ошибку, если CAPTCHA требуется

      - name: Run Prime Gaming claimer
        env:
          PG_EMAIL: ${{ secrets.PG_EMAIL }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_OTPKEY: ${{ secrets.PG_OTPKEY }}
          NOTIFY: ${{ secrets.TELEGRAM_APPRISE_URL }}
          NOTIFY_TITLE: 'Prime Gaming Claimer'
        run: node prime-gaming.js || true

      - name: Run GOG claimer
        env:
          GOG_EMAIL: ${{ secrets.GOG_EMAIL }}
          GOG_PASSWORD: ${{ secrets.GOG_PASSWORD }}
          NOTIFY: ${{ secrets.TELEGRAM_APPRISE_URL }}
          NOTIFY_TITLE: 'GOG Claimer'
        run: node gog.js || true

      - name: Cache data
        uses: actions/cache@v4
        with:
          path: data/
          key: ${{ runner.os }}-fgc-data-${{ github.run_id }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: |
            data/
            vnc_info.txt
